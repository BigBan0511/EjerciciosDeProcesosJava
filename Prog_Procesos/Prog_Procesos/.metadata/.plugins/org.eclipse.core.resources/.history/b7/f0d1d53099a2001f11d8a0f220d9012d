package progSincro;

public class ej1 {

	public static void main(String[] args) {
		Sala sala = new Sala();
		Thread hilo = null;
		
		for (int x = 0; x < 30; x++) {
			hilo = new Thread(() -> {
				try {
					if(sala.isTerminar()) {
						System.out.println("terminar");
					}else {
						sala.entrar();
						if(sala.get)
					}
					Thread.sleep(10000);
					Thread.sleep(1500);
					sala.salir();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			});
		}
		hilo.start();
	}

}

class Sala{
	private int capacidad = 5;
	private int contador = 0;
	private int contInt = 0;
	private int intentos = 3;
	private boolean terminar = false;
	
	public synchronized void entrar() throws InterruptedException {
		while(capacidad == contador) {
			System.out.println("Sala llena");
			if(contInt < intentos) {
				wait();
				contInt++;
			}else {
				terminar = true;
			}
		}
		contador++;
		System.out.println("Ha entrado una persona");
		notifyAll();
	}
	
	public synchronized void salir() {
		while(contador == 0) {
			System.out.println("no se puede salir");
		}
		contador--;
		notifyAll();
	}
	
	public boolean isTerminar() {
		return terminar;
	}
	
	public int getContador() {
		return contador;
	}
}